(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./resources/assets/js/pages/PasswordReset/PasswordReset.jsx":function(e,s,r){"use strict";r.r(s),r.d(s,"PasswordResetComponent",(function(){return h}));r("./node_modules/core-js/modules/es.promise.js"),r("./node_modules/core-js/modules/es.string.includes.js"),r("./node_modules/core-js/modules/es.string.match.js");var t=r("./node_modules/react/index.js"),o=r.n(t),a=r("./node_modules/axios/index.js"),n=r.n(a),c=r("./node_modules/recompose/dist/Recompose.esm.js"),i=r("./node_modules/react-redux/es/index.js"),d=r("./node_modules/react-router/es/withRouter.js"),u=r("./resources/assets/js/utils/history.js"),l=r("./resources/assets/js/store/action-creators/flashMessages/index.js"),m=r("./node_modules/formik/dist/formik.esm.js"),p=r("./resources/assets/js/components/index.js");const w=(e={})=>{let s={};return e.email||(s.email="This field is required"),e.password||(s.password="This field is required"),e.password_confirmation?e.password!==e.password_confirmation&&(s.password_confirmation="The two passwords don't match"):s.password_confirmation="This field is required",s},j=({onSubmit:e})=>o.a.createElement(m.c,{validate:w,onSubmit:e},e=>o.a.createElement(m.b,null,o.a.createElement(m.a,{type:"text",name:"email",labelText:"Enter your Email",component:p.o}),o.a.createElement(m.a,{type:"password",name:"password",labelText:"Enter a New Password",component:p.j}),o.a.createElement(m.a,{type:"password",name:"password_confirmation",labelText:"Confirm Your New Password",component:p.j}),o.a.createElement(p.i,{className:"float-right",type:"submit"},"Set New Password")));function b(e,s){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),r.push.apply(r,t)}return r}function f(e,s,r){return s in e?Object.defineProperty(e,s,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[s]=r,e}const h=e=>{const{submitPasswordReset:s}=e;return o.a.createElement(j,{onSubmit:s})};s.default=Object(c.a)(d.a,Object(i.b)(null,(e,s)=>({submitPasswordReset:async(r,{setErrors:t})=>{const{match:o}=s;try{await n.a.post("/api/reset-password",function(e){for(var s=1;s<arguments.length;s++){var r=null!=arguments[s]?arguments[s]:{};s%2?b(Object(r),!0).forEach((function(s){f(e,s,r[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(r,s))}))}return e}({},r,{token:o.params.resetToken})),u.a.push("/login"),e(Object(l.a)("success","Password successfully reset"))}catch(e){t((e=>{const s={};return e.errors.password&&e.errors.password.includes("The password must be at least 6 characters.")&&(s.password="The password must be at least 6 characters."),s})(e.response.data))}}})))(h)}}]);